#ifndef WEAPON_GFX_S3D
#define WEAPON_GFX_S3D

#include "../Bullet/BulletGFX.s3d"

class WeaponGFX: WeaponModel {
	// graphic
	var mesh;
	var obj;
	// sound
	var shoot_fx;
	
	Init(meshPath, scaleFactor, soundPath);
	Shoot(position, direction);
	Draw(); //
	
	hasShoot();
};

function WeaponGFX::Init(meshPath, scaleFactor, soundPath) {
	
	mesh = CVMNewMesh(meshPath);
	mesh.scale(scaleFactor);
	obj = CVMObj(mesh);
	
	shoot_fx = CVmVRAWAV(soundPath);
}

function WeaponGFX::Shoot(position, direction){
	if (!hasShoot() && nBullets > 0) {
		position += [0,1,0] + 1.0*direction;
		var b = BulletGFX(this.Pid, position, direction, BULLET_DEFAULT_SPEED, damagePoints);
		b.Init();
		shoot_fx.play();
		nextShootTimeout = attackInterval;
		nBullets--;
		return b;
	}
}

function WeaponGFX::Draw() {
}

function NewRocketLauncher(pid, scaleFactor) {
	
	var wGfx = WeaponGFX(pid, 1.0, 5, 3, 3.0);
	wGfx.Init("rocketl.aam", scaleFactor, "shoot.wav");
	
	return wGfx;
}

function NewRailGun(pid, scaleFactor) {
	
	var wGfx = WeaponGFX(pid, 0.2, 1, 50, 1.5);
	wGfx.Init("railgun.aam", scaleFactor, "shoot.wav");
	
	return wGfx;
}


#endif
